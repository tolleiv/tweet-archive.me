.container.row
    .hero.hero-unit.span7.offset2
        h1= title
        p A little twitter archving service ... let's try it out*:
        p
                a(href='/start').btn.btn-info.btn-large Login with twitter&nbsp;
                    i.icon-chevron-right.icon-white
.container.row

        .span5.offset2.delayed
            | Twitter streams might contain valuable information and often shared links turn out to be
            | important right after they disappeared from the twitter timeline. So this one is trying to
            | build an archiv service for your Twitter timeline. With easy and flexible search functionality,
            | flexible filters and with control over your data.

            | It's still under heavy development, but here's what it has and what's to come next:

            h3 Features implemented so far:
            dl
                dt  Archive your timeline&nbsp;
                    i.icon-check
                dd Right after your first login the service will start archiving your timeline - that works quite reliable already.
                dt Listing your tweets&nbsp;
                    i.icon-check
                dd Whatever is in your archive will be listen in the backend as well. The GUI is not perfect yet but works ;)
                dt Search and stuff&nbsp;
                   i.icon-check
                dd
                    | That's what you need when your timeline outgrows a certain size - right?
                    | Current solution covers a Apache Solr based solution. Builds up the search results quick enough at the moment and allows nice faceting.
                    | It's still quite rough and really just a very basic solution which just scratches the possibilities of Solr and of the data comming in.
                dt Remove shortened Urls&nbsp;
                    i.icon-check
                dd An archive which holds shortened Urls is worthless once the shortener goes out of service, so replacing shortened Urls is sth. which I found essential and which is working in a basic implementation already.

            h3 Features to come (next):
            dl
                dt Efficient storage
                dd Currently all tweets are kept per user. That wasts memory and make all database operations a bit more inefficient. Also the Apache Solr index is build up on that and the same tweet might be indexed twice atm. Space for improvement ;)
                dt Data control
                dd I'm not interested in your data anyhow - so providing a feature to delete your archive is planned quite early.
                dt ...
                dd Many other things, I haven't made up my mind on that yet.

        .span3.delayed
            .delayed
                p.alert
                    | *) This is early alpha, data might get lost, interfaces might change, things will change without notice
                    | - better be prepared that there is no guarantee for anything, yet.

            .delayed
                p.alert.alert-info You might wonder who's working here -&nbsp;
                    a(href='http://www.twitter.com/tolleiv') find me on Twitter @tolleiv
                    br
                    | To get updates on the service simply follow&nbsp;
                    a(href='http://www.twitter.com/tweetarchiveme')@tweetarchiveme on Twitter

            .delayed
                p.alert.alert-info This service is build up on OpenSource software using NodeJS, MongoDB, ExpressJS, Apache Solr, Twitter Bootstrap, of course Linux and few others.
                <a href="https://twitter.com/tweetarchiveme" class="twitter-follow-button" data-show-count="false" data-size="large">Follow @tweetarchiveme</a>




